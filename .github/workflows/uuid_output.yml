name: UUID_OUTPUT
on:
  workflow_dispatch:

jobs:
   id:
    runs-on: ubuntu-latest
    outputs:
      uuid: ${{ steps.uuid.outputs.uuid }}
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      empty: ${{ steps.set-empty.outputs.matrix}}
    steps:
      - name: generate uuid
        id: uuid
        run: |
          echo "::set-output name=uuid::$(uuidgen)"
      - id: set-matrix
        run: echo "matrix={\"include\":[{\"project\":\"foo\",\"config\":\"Debug\"},{\"project\":\"bar\",\"config\":\"Release\"}]}" >> $GITHUB_OUTPUT  
      - id: set-empty
        run: echo "matrix={\"include\":[]}" >> $GITHUB_OUTPUT   
   running:
    needs: id
    strategy:
      matrix:
        device: ["first", "second"]
    runs-on: ubuntu-latest
    steps:        
      - name: Run matrix name
        run: echo ${{matrix.device}}
      - name: Run needed output
        run: echo ${{needs.id.outputs.uuid}}        
      - name: add env var
        run: echo "BATCH_ID=${{needs.id.outputs.uuid}} " >> $GITHUB_ENV        
      - run: |
          echo "$BATCH_ID"
          env
      - run: |
          echo ${{fromJSON(needs.id.outputs.matrix)}}
          echo ${{fromJSON(needs.id.outputs.matrix).include}}
      - run: |
          echo ${{fromJSON(needs.id.outputs.empty)}}
          echo ${{fromJSON(needs.id.outputs.empty).include}}
          echo ${{fromJSON(needs.id.outputs.empty).include == '[]'}}
          echo ${{fromJSON(needs.id.outputs.empty).include == 'Array'}}

